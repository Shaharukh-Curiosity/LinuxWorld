// Generated by CoffeeScript 1.12.7
(function() {
<<<<<<< HEAD
  var XMLNode, XMLRaw,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

=======
  var NodeType, XMLNode, XMLRaw,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  NodeType = require('./NodeType');

>>>>>>> dc7ca8caa9759d4a9def25682707f917f8e9a75e
  XMLNode = require('./XMLNode');

  module.exports = XMLRaw = (function(superClass) {
    extend(XMLRaw, superClass);

    function XMLRaw(parent, text) {
      XMLRaw.__super__.constructor.call(this, parent);
      if (text == null) {
<<<<<<< HEAD
        throw new Error("Missing raw text");
      }
=======
        throw new Error("Missing raw text. " + this.debugInfo());
      }
      this.type = NodeType.Raw;
>>>>>>> dc7ca8caa9759d4a9def25682707f917f8e9a75e
      this.value = this.stringify.raw(text);
    }

    XMLRaw.prototype.clone = function() {
      return Object.create(this);
    };

    XMLRaw.prototype.toString = function(options) {
<<<<<<< HEAD
      return this.options.writer.set(options).raw(this);
=======
      return this.options.writer.raw(this, this.options.writer.filterOptions(options));
>>>>>>> dc7ca8caa9759d4a9def25682707f917f8e9a75e
    };

    return XMLRaw;

  })(XMLNode);

}).call(this);
